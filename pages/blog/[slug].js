import React from 'react'
import md from 'markdown-it';
import fs from "fs"
import Head from "next/head"
import matter from 'gray-matter'
import Image from "next/image"
import Script from 'next/script';
import path from 'path';
// import hljs from "highlight.js"
import Footer from '../../components/Footer'
import Navbar from '../../components/Navbar'
import styles from '../../styles/Blog.module.css'

function Blog({frontmatter,content}) {  

  return (
    <div className={styles.myblog}>
        <Head>
  <title>{frontmatter.title}</title>
  <meta name="description" content="Generated by create next app" />
       <link rel="preconnect" href="https://fonts.googleapis.com"/>
       <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
       <link href="https://fonts.googleapis.com/css2?family=Secular+One&display=swap" rel="stylesheet"/>
       <link href="https://fonts.googleapis.com/css2?family=Nerko+One&display=swap" rel="stylesheet"/>
       <link rel="stylesheet" href="/path/to/styles/default.min.css" />
</Head>
       {/* <Script src="/path/to/highlight.min.js"></Script>
       <Script id='my-script'>{hljs.highlightAll()}</Script> */}
      <Navbar />
    <div className={styles.markdown_body}>
    <h1>{frontmatter.title}</h1>
    <div className={styles.im}><Image src={frontmatter.image} alt="blog_image" height={500} width={500} loading="lazy" className={styles.blog_img} /></div>
      <div dangerouslySetInnerHTML={{ __html: md().render(content) }} />
    </div>
      <Footer />
    </div>
  )
}
export async function getStaticPaths() {
  const files = fs.readdirSync(path.join("blogs"));

  
  const paths = files.map((fileName) => ({
    params: {
      slug: fileName.replace('.md', ''),
    },
}));
return {
  paths,
  fallback: "blocking",
};
}
export async function getStaticProps({ params: { slug }}){
  const fileName = fs.readFileSync(`blogs/${slug}.md`, 'utf-8',);
  const { data: frontmatter, content } = matter(fileName);
  return {
    props: {
      frontmatter,
      content,
    }
  };
}

export default Blog
