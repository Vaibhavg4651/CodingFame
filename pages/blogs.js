import React from 'react'
import Navbar from '../components/Navbar'
import Head from 'next/head'
import styles from '../styles/Blogs.module.css'
import Image from 'next/image'
import { useRouter } from 'next/router'

import Footer from '../components/Footer'
import fs from "fs"
import path from 'path'
import matter from 'gray-matter'

function Blogs({posts}) {
  const router=useRouter()
  return (
    <div >
      <Head>
        <title>Blogs | MOHD AMMAR</title>
        <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link rel="preconnect" href="https://fonts.googleapis.com"/>
          <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
          <link href="https://fonts.googleapis.com/css2?family=Secular+One&display=swap" rel="stylesheet"/>
          <link href="https://fonts.googleapis.com/css2?family=Nerko+One&display=swap" rel="stylesheet"/>
      </Head>
      <Navbar />
      <div className={styles.allblogs}>
     <h1 className={styles.myblogs}>My Blogs</h1>
      <div className={styles.recent}>
      {posts.map((elem,i) => {
        return (
        <div className={styles.blog} onClick={()=>{router.push(`blog/${elem.frontMatter.slug}/`)}} key={i}> 
         <Image  src={elem.frontMatter.image} alt="blog_image" width={200} height={200}   loading="lazy"/>
         <h1>{elem.frontMatter.title}</h1>
         <div>{(elem.frontMatter.description).substring(0,200)+ '...'}</div>
         <div className={styles.date}>
                Published On {elem.frontMatter.date}
              </div>
        </div>
        )})}
      </div>
      </div>
      <Footer />
    </div>
  )
}

export default Blogs
export const getStaticProps = async () => {
  const files = fs.readdirSync(path.join('blogs'))
  const posts = files.map(filename => {
    const markdownWithMeta = fs.readFileSync(path.join('blogs', filename), 'utf-8')
    const { data: frontMatter } = matter(markdownWithMeta)
    return {
      frontMatter,
      slug: filename.split('.')[0]
    }
  })
  return {
    props: {
      posts
    },revalidate:2
  }
}
